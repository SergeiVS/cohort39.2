/* display - это св-во, которое решает как эелемент будет отображаться на странице и с какими св-ами */
/* 1 - display: inline - превращает элемент из блочного в строчный */
/* - элемент распологается в строчку
- display: inline - отключает width и height у элемента, которому мы это св-во задали */
/* - margin - учитывает отступы только справа и слева, а также при пересечении с margin другого элемента, отступы не накладываются друг на друга */
/* 2 - display: block - превращает элементы в блочные */
/* 3 - display: inline-block - комбинирует св-ва строчных и блочных элементов */
/* - margin - учитывает отступы со всех сторон, но при пересечении с margin другого элемента, отступы не накладываются друг на друга 
- width и height учитываются
- если на экране хватает места для расположения элементов, то они распологаются в строку, а если не хватает, то элементы переносятся вниз */
/* !!!Мы не будем использовать inline, block, inline-block свойства(может быть только в редких случаях, но я буду о них говорить) */
/* 4 - display: none - скрывает элеимент с экрана */
/* //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/* 5 - display: flex - позволяет управлять элементами используя flexbox, это св-во дается родителю всех элементов, которыми вы хотите управлять */
/* Flex св-ва только для родителя:
1. flex-direction -меняет направление(Вертикально/ горизонтально) вдоль которых будут распологаться элементы
- row - используется по умолчанию, распологает элементы в род контейнере по горизонтали
- column - распологает элементы в род контейнере по вертикали
- row-reverse - распологает элементы в строку, но переносит в конец главное(main) оси и меняет элементы местами(полностью наоборот)
 - column-reverse - распологает элементы в столбец, но переносит в конец главное(main) оси и меняет элементы местами(полностью наоборот)
*/
/* 2. gap - отстпуы между элементами внутри родительского flex контейнера */
/* 3. flex-wrap - св-во, которое отвечает за то как наши элементы переносятся на другую строку, при сужении экрана
- nowrap - по умолчанию, элементы не переносятся на другую строку
- wrap - элемены переносятся на другую строку, начиная с последнего и он переносится вниз */
/* - wrap-reverse - элемены переносятся на другую строку, начиная с последнего вверх,  итоге первы элемент оказывается в самом низу */
/* 4. flex:1 - говорит элементу занять все возможное пространство в контейнере в котором он находится */
/* 5. justify-content - позволяет распологать элементы в вдоль main axis 
6. justify-content - позволяет распологать элементы в вдоль cross axis  */

* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
li {
  margin: 0;
}

#root {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  background-color: aliceblue;
  /* padding: 20px; */
}

.box-container {
  /* height: 100%; */
  width: 100%;
  display: flex;
  flex: 1;
  flex-direction: row;
  gap: 30px;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
}

.box {
  width: 150px;
  height: 150px;
  border: 1px solid black;
  padding: 20px;
  font-size: 24px;
  font-weight: bold;
}

#box1 {
  background-color: aquamarine;
}

#box2 {
  background-color: blue;
}

#box3 {
  background-color: blueviolet;
}

#box4 {
  background-color: red;
}

#box5 {
  color: white;
  background-color: black;
}

.header {
  width: 100%;
  height: 100px;
  padding: 40px;
  background-color: black;
  display: flex;
  justify-content: space-between;
}

.navigation {
  display: flex;
  gap: 20px;
}

.logo {
  color: white;
  font-weight: bold;
  font-size: 24px;
}

.navlink {
  color: white
}
